<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java复习（一）--基本常识，Java概念]]></title>
    <url>%2F2019%2F05%2F15%2FJava%E5%9F%BA%E7%A1%80%E4%B8%80%2F</url>
    <content type="text"><![CDATA[参考资料： Java核心技术 卷一https://blog.csdn.net/simplebam/article/details/65447600 基本常识什么是软件 软件：一系列按照特定组织的计算机数据和指令的集合 常用CDM命令 dir:列出当前目录下的文件及文件夹（ md:创建目录 rd:删除目录 cd:进入指定目录 cd ..:退回到上一级目录 cd\:退回到根目录 del(delete):删除文件 exit:退出dos命令行 cls(clear screen)：清屏 Mac常用命令 cd:进入指定目录 ls:列出当前目录下的所有文件 pwd:显示当前目录路径 mkdir:新建目录 rmdir:删除目录 env: 显示当前所有设置过的环境变量 Java概念什么是Java Java是一门面向对象编程语言，95年sun公司发布。 Java的优点简单性 风格类似于C++,缺摒弃了C++中一些很少用到的特征，比如go to 语句，Java也没有头文件，指针运算等。 Java提供了丰富的类库 面向对象OOP 基本概念 对象 对象是人们要进行研究的任何事物，不仅能表示具体的事物，还能表示抽象的规则、计划或事件 对象的状态和行为 具有相同或相似性质的对象的抽象就是类，因此，对象的抽象是类，类的具体化就是对象，也可以说类的实例是对象。 类具有属性，他是对象的状态的抽象，用数据结构来描述类的属性 类具有操作，他是对象的行为的抽象，用操作名和实现该操作的方法来描述 类的结构 一般：具体结构成为分类结构，也可以说是“或”关系，或者是”is a“关系 整体：不跟结构成为组装结构，他们之间的关系是一种”与“关系，或者是”has a“关系 消息和方法 对象直接进行通信的结构叫做消息 类中操作的实现过程叫做方法。 三大特性 封装：隐藏对象的属性和实现细节，仅对外提供公共访问方式，将变化隔离，便于使用，提高复用性和安全性 继承：提高代码复用性；继承是多态的前提 多态：父类或接口定义的引用变量可以指向子类或具体实现类的实例对象，提高了程序的拓展性。 五大基本原则 单一职责原则（SRP）:类的功能要单一 开放封闭原则（OCP）:一个模块对于拓展是开放的，对于修改是封闭的 里式替换原则（LSP）:子类可以替换父类出现在父类能够出现的任何地方 依赖倒置原则（DIP）:高层次的模块不应该依赖低层次的模块，他们都应该依赖于抽象。抽象不应该依赖于具体实现，具体实现应该依赖于抽象。 接口分离原则（ISP）:设计采用多个特定客户类有关的接口比采用一个通用的接口要好。 总结 面向对象：易维护，易复用，易拓展，低耦合。 面向过程：性能高，耗资源 分布式 Java有一个丰富的例程库，用于处理像HTTP和FTP之类的TCP/IP协议。Java程序可以通过URL打开和访问网络上的对象 健壮性 早期问题检测、运行时检测 Java和C++最大的不同在于Java采用的指针模型可以消除重写内存和损坏数据的可能 安全性 防病毒–运行时堆栈溢出，如蠕虫和病毒常用的攻击手段 防篡改–未经授权不可读写文件，除非有数字签名 存储分配模型–Java没有指针，所有无法得到隐藏起来的内幕，也无法伪造指针去指向存储器。Java编译程序不处理存储安排决策（由Java解释程序决定），所以程序猿不能通过查看声明去猜测类的实际存储安排。 体系结构中立（编译和解释性） Java程序可以在任何实现了Java解释程序和运行系统的系统上运行 可移植性 Java规范中没有“依赖具体实现”的方法 基本数据类型的大小和范围都做了明确的说明 高性能 即时编译 多线程性 Java是第一个支持并发程序设计的主流语言 动态性]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Java基础</tag>
      </tags>
  </entry>
</search>
